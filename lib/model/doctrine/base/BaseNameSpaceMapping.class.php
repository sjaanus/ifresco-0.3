<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Namespacemapping', 'doctrine');

/**
 * BaseNamespacemapping
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $namespace
 * @property string $prefix
 * 
 * @method integer          getId()        Returns the current record's "id" value
 * @method string           getNamespace() Returns the current record's "namespace" value
 * @method string           getPrefix()    Returns the current record's "prefix" value
 * @method Namespacemapping setId()        Sets the current record's "id" value
 * @method Namespacemapping setNamespace() Sets the current record's "namespace" value
 * @method Namespacemapping setPrefix()    Sets the current record's "prefix" value
 * 
 * @package    AlfrescoClient
 * @subpackage model
 * @author     Dominik Danninger
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNamespacemapping extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('namespacemapping');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('namespace', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('prefix', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}