<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contentmodeltemplates', 'doctrine');

/**
 * BaseContentmodeltemplates
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $class
 * @property integer $multicolumn
 * @property string $aspectview
 * @property string $jsondata
 * 
 * @method integer               getId()          Returns the current record's "id" value
 * @method string                getClass()       Returns the current record's "class" value
 * @method integer               getMulticolumn() Returns the current record's "multicolumn" value
 * @method string                getAspectview()  Returns the current record's "aspectview" value
 * @method string                getJsondata()    Returns the current record's "jsondata" value
 * @method Contentmodeltemplates setId()          Sets the current record's "id" value
 * @method Contentmodeltemplates setClass()       Sets the current record's "class" value
 * @method Contentmodeltemplates setMulticolumn() Sets the current record's "multicolumn" value
 * @method Contentmodeltemplates setAspectview()  Sets the current record's "aspectview" value
 * @method Contentmodeltemplates setJsondata()    Sets the current record's "jsondata" value
 * 
 * @package    AlfrescoClient
 * @subpackage model
 * @author     Dominik Danninger
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseContentmodeltemplates extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contentmodeltemplates');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('class', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('multicolumn', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('aspectview', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('jsondata', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}