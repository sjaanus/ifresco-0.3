<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Searchtemplates', 'doctrine');

/**
 * BaseSearchtemplates
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $defaultview
 * @property integer $multicolumn
 * @property integer $columnset_id
 * @property string $showdoctype
 * @property string $jsondata
 * 
 * @method integer         getId()           Returns the current record's "id" value
 * @method string          getName()         Returns the current record's "name" value
 * @method integer         getDefaultview()  Returns the current record's "defaultview" value
 * @method integer         getMulticolumn()  Returns the current record's "multicolumn" value
 * @method integer         getColumnsetId()  Returns the current record's "columnset_id" value
 * @method string          getShowdoctype()  Returns the current record's "showdoctype" value
 * @method string          getJsondata()     Returns the current record's "jsondata" value
 * @method Searchtemplates setId()           Sets the current record's "id" value
 * @method Searchtemplates setName()         Sets the current record's "name" value
 * @method Searchtemplates setDefaultview()  Sets the current record's "defaultview" value
 * @method Searchtemplates setMulticolumn()  Sets the current record's "multicolumn" value
 * @method Searchtemplates setColumnsetId()  Sets the current record's "columnset_id" value
 * @method Searchtemplates setShowdoctype()  Sets the current record's "showdoctype" value
 * @method Searchtemplates setJsondata()     Sets the current record's "jsondata" value
 * 
 * @package    AlfrescoClient
 * @subpackage model
 * @author     Dominik Danninger
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSearchtemplates extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('searchtemplates');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('defaultview', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('multicolumn', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('columnset_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('showdoctype', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('jsondata', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}